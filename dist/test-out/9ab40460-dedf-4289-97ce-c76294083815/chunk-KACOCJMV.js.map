{
  "version": 3,
  "sources": ["angular:jit:template:apps/mfe-dashboard/src/app/components/sidebar-menu/sidebar-menu.html", "angular:jit:style:apps/mfe-dashboard/src/app/components/sidebar-menu/sidebar-menu.css", "apps/mfe-dashboard/src/app/components/sidebar-menu/sidebar-menu.ts"],
  "sourcesContent": ["<div class=\"flex w-80 flex-col\">\n  <div class=\"flex flex-col rounded-2xl bg-white p-4 shadow-sm ring-1 ring-slate-200/60 dark:bg-slate-900/70 dark:ring-slate-800\">\n    <div\n      #menuItem\n      class=\"flex cursor-pointer items-center gap-3 rounded-lg px-3 py-2 text-sm font-medium leading-normal text-[#111418] transition dark:text-slate-200\"\n      [ngClass]=\"{ 'active text-white shadow-lg': activeId() === main.id }\"\n      data-id=\"{{ main.id }}\"\n      (click)=\"onSelect(main, menuItem)\">\n      <span class=\"text-[#111418] dark:text-slate-200\" [innerHTML]=\"iconSvg(main.icon)\" aria-hidden=\"true\"></span>\n      <p>{{ main.label }}</p>\n    </div>\n\n    <div *ngFor=\"let section of sections; trackBy: sectionTrack\" class=\"mt-4 flex flex-col gap-4\" [class.pt-4]=\"section.divider\">\n      <ng-container *ngIf=\"section.title as title\">\n        <h2 class=\"px-3 text-base font-medium text-[#111418] dark:text-slate-100\">{{ title }}</h2>\n      </ng-container>\n\n      <div *ngIf=\"section.divider\" class=\"px-3\">\n        <hr class=\"border-slate-200/70 dark:border-slate-700/70\" />\n      </div>\n\n      <div class=\"flex flex-col gap-2\">\n        <div\n          *ngFor=\"let item of section.items; trackBy: itemTrack\"\n          #menuItem\n          class=\"flex cursor-pointer items-center gap-3 rounded-lg px-3 py-2 text-sm font-medium leading-normal text-[#111418] transition dark:text-slate-200\"\n          [ngClass]=\"{ 'active text-white shadow-lg': activeId() === item.id }\"\n          data-id=\"{{ item.id }}\"\n          (click)=\"onSelect(item, menuItem)\">\n          <span class=\"text-[#111418] dark:text-slate-200\" [innerHTML]=\"iconSvg(item.icon)\" aria-hidden=\"true\"></span>\n          <p>{{ item.label }}</p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"mt-4 flex flex-col gap-1\">\n      <div\n        *ngFor=\"let item of utilities; trackBy: itemTrack\"\n        #menuItem\n        class=\"flex cursor-pointer items-center gap-3 rounded-lg px-3 py-2 text-sm font-medium leading-normal text-[#111418] transition dark:text-slate-200\"\n        [ngClass]=\"{ 'active text-white shadow-lg': activeId() === item.id }\"\n        data-id=\"{{ item.id }}\"\n        (click)=\"onSelect(item, menuItem)\">\n        <span class=\"text-[#111418] dark:text-slate-200\" [innerHTML]=\"iconSvg(item.icon)\" aria-hidden=\"true\"></span>\n        <p>{{ item.label }}</p>\n      </div>\n    </div>\n  </div>\n</div>\n", "/* apps/mfe-dashboard/src/app/components/sidebar-menu/sidebar-menu.css */\n/*# sourceMappingURL=sidebar-menu.css.map */\n", "import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, HostListener, Input, QueryList, ViewChildren, signal } from '@angular/core';\nimport { NgClass, NgFor, NgIf } from '@angular/common';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { DASHBOARD_ICONS, DashboardIconName } from '../dashboard-icons';\n\nexport interface SidebarItem {\n  id: string;\n  label: string;\n  icon: DashboardIconName;\n  active?: boolean;\n}\n\nexport interface SidebarSection {\n  title?: string;\n  items: SidebarItem[];\n  divider?: boolean;\n}\n\n@Component({\n  selector: 'app-sidebar-menu',\n  standalone: true,\n  imports: [NgClass, NgFor, NgIf],\n  templateUrl: './sidebar-menu.html',\n  styleUrl: './sidebar-menu.css',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidebarMenu implements AfterViewInit {\n  @Input({ required: true }) main!: SidebarItem;\n  @Input() sections: SidebarSection[] = [];\n  @Input() utilities: SidebarItem[] = [];\n\n  @ViewChildren('menuItem', { read: ElementRef })\n  private readonly menuItems!: QueryList<ElementRef<HTMLDivElement>>;\n\n  protected readonly activeId = signal<string>('');\n  private activeElement?: HTMLElement;\n  private readonly iconCache = new Map<DashboardIconName, SafeHtml>();\n\n  protected readonly sectionTrack = (_: number, section: SidebarSection) => section.title ?? section.items.map((item) => item.id).join('-');\n  protected readonly itemTrack = (_: number, item: SidebarItem) => item.id;\n\n  constructor(private readonly sanitizer: DomSanitizer) {}\n\n  protected iconSvg(name: DashboardIconName): SafeHtml {\n    let cached = this.iconCache.get(name);\n    if (!cached) {\n      cached = this.sanitizer.bypassSecurityTrustHtml(DASHBOARD_ICONS[name]);\n      this.iconCache.set(name, cached);\n    }\n    return cached;\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      const initialId = this.main?.id ?? this.sections[0]?.items[0]?.id ?? '';\n      this.activeId.set(initialId);\n      this.updateActiveElement(initialId);\n    }, 0);\n  }\n\n  protected onSelect(item: SidebarItem, element: HTMLDivElement): void {\n    this.activeId.set(item.id);\n    this.updateActiveElement(item.id, element);\n  }\n\n  @HostListener('window:resize')\n  onResize(): void {\n    if (this.activeElement) {\n      this.applyShift(this.activeElement);\n    }\n  }\n\n  private updateActiveElement(id: string, element?: HTMLElement): void {\n    const host = element ?? this.findElementById(id);\n    if (!host) {\n      return;\n    }\n\n    if (this.activeElement && this.activeElement !== host) {\n      this.activeElement.style.setProperty('--active-shift', '0px');\n    }\n\n    this.activeElement = host;\n    this.applyShift(host);\n  }\n\n  private findElementById(id: string): HTMLElement | undefined {\n    const elements = this.menuItems?.toArray().map((ref) => ref.nativeElement) ?? [];\n    return elements.find((el) => el.dataset['id'] === id);\n  }\n\n  private applyShift(element: HTMLElement): void {\n    const delta = this.computeShift(element);\n    element.style.setProperty('--active-shift', `${delta}px`);\n  }\n\n  private computeShift(container: HTMLElement): number {\n    const rect = container.getBoundingClientRect();\n    const children = Array.from(container.children) as HTMLElement[];\n    if (!children.length) {\n      return 0;\n    }\n\n    const left = Math.min(...children.map((child) => child.getBoundingClientRect().left));\n    const right = Math.max(...children.map((child) => child.getBoundingClientRect().right));\n    const groupWidth = right - left;\n    const leftOffset = left - rect.left;\n    const desiredLeft = (rect.width - groupWidth) / 2;\n    return desiredLeft - leftOffset;\n  }\n}\n"],
  "mappings": "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",
  "names": ["sidebar_menu_default", "init_sidebar_menu", "SidebarMenu"]
}
