{
  "version": 3,
  "sources": ["libs/ui/src/lib/icon/icon.component.ts", "libs/ui/src/lib/card/card.component.ts", "libs/ui/src/lib/button/button.component.ts", "libs/ui/src/lib/skeleton/skeleton.component.ts", "libs/ui/src/public-api.ts", "apps/mfe-dashboard/src/app/remote-entry/remote-entry.component.ts", "apps/mfe-dashboard/src/app/remote-entry/remote-entry.component.spec.ts"],
  "sourcesContent": ["import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\nconst SIZE_CLASSES: Record<'sm' | 'md' | 'lg', string> = {\n  sm: 'text-base',\n  md: 'text-2xl',\n  lg: 'text-4xl'\n};\n\n@Component({\n  selector: 'ui-icon',\n  standalone: true,\n  template: `\n    <span\n      class=\"material-symbols-outlined leading-none\"\n      [attr.aria-hidden]=\"ariaHidden\"\n      [attr.aria-label]=\"ariaLabel\"\n    >\n      {{ name }}\n    </span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IconComponent {\n  @Input({ required: true }) name!: string;\n\n  @Input() size: 'sm' | 'md' | 'lg' = 'md';\n\n  @Input('aria-label') ariaLabel?: string;\n\n  @HostBinding('class')\n  get classList(): string {\n    const sizeClass = SIZE_CLASSES[this.size] ?? SIZE_CLASSES.md;\n    return 'inline-flex items-center justify-center text-inherit ' + sizeClass;\n  }\n\n  get ariaHidden(): 'true' | null {\n    return this.ariaLabel ? null : 'true';\n  }\n}\n", "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { NgIf } from '@angular/common';\n\n@Component({\n  selector: 'ui-card',\n  standalone: true,\n  imports: [NgIf],\n  template: `\n    <section\n      class=\"rounded-2xl bg-white p-4 shadow-sm ring-1 ring-slate-200/60 transition-colors dark:bg-slate-800 dark:ring-slate-700/60 lg:p-6\"\n    >\n      <header *ngIf=\"title || subtitle\" class=\"mb-4 flex flex-col gap-1 lg:flex-row lg:items-center\">\n        <div class=\"flex-1\">\n          <h2 class=\"text-lg font-semibold text-slate-900 dark:text-white\">{{ title }}</h2>\n          <p *ngIf=\"subtitle\" class=\"text-sm text-slate-500 dark:text-slate-300\">{{ subtitle }}</p>\n        </div>\n        <ng-content select=\"[card-actions]\"></ng-content>\n      </header>\n      <div class=\"space-y-4 text-sm text-slate-600 dark:text-slate-200\">\n        <ng-content></ng-content>\n      </div>\n    </section>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CardComponent {\n  @Input() title = '';\n  @Input() subtitle = '';\n}\n", "import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'ui-button',\n  standalone: true,\n  imports: [NgClass],\n  template: `\n    <button\n      type=\"button\"\n      class=\"inline-flex items-center gap-2 rounded-xl px-4 py-2 text-sm font-medium transition-colors focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2\"\n      [ngClass]=\"variantClasses\"\n      [attr.aria-label]=\"ariaLabel\"\n    >\n      <ng-content />\n    </button>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonComponent {\n  @Input() variant: 'primary' | 'ghost' = 'primary';\n  @Input('aria-label') ariaLabel?: string;\n\n  @HostBinding('class') hostClass = 'inline-flex';\n\n  get variantClasses(): string {\n    return this.variant === 'ghost'\n      ? 'text-slate-600 hover:bg-slate-100 focus-visible:outline-slate-400 dark:text-slate-200 dark:hover:bg-slate-800 dark:focus-visible:outline-slate-500'\n      : 'bg-primary text-primary-foreground hover:bg-blue-600 focus-visible:outline-blue-500 dark:bg-blue-500 dark:hover:bg-blue-400';\n  }\n}\n", "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'ui-skeleton',\n  standalone: true,\n  template: `\n    <span\n      class=\"inline-block animate-pulse rounded-lg bg-slate-200 dark:bg-slate-700\"\n      [style.width.px]=\"width\"\n      [style.height.px]=\"height\"\n    ></span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SkeletonComponent {\n  @Input() width = 160;\n  @Input() height = 16;\n}\n", "export * from './lib/icon/icon.component';\nexport * from './lib/card/card.component';\nexport * from './lib/button/button.component';\nexport * from './lib/skeleton/skeleton.component';\n", "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { NgFor } from '@angular/common';\nimport { CardComponent, IconComponent } from '@appshell/ui';\n\ninterface KpiCard {\n  label: string;\n  value: string;\n  icon: string;\n  trend: string;\n}\n\n@Component({\n  selector: 'mfe-dashboard-entry',\n  standalone: true,\n  imports: [NgFor, CardComponent, IconComponent],\n  template: `\n    <section class=\"space-y-6\">\n      <header class=\"flex flex-col gap-2\">\n        <h1 class=\"text-2xl font-semibold text-slate-900 dark:text-white\">Panel general</h1>\n        <p class=\"text-sm text-slate-500 dark:text-slate-300\">\n          Una vista rápida de los indicadores clave del negocio.\n        </p>\n      </header>\n\n      <div class=\"grid gap-4 md:grid-cols-2 xl:grid-cols-4\">\n        <ui-card *ngFor=\"let kpi of kpis\" [title]=\"kpi.label\" [subtitle]=\"kpi.trend\">\n          <div class=\"flex items-baseline justify-between\">\n            <p class=\"text-3xl font-semibold\">{{ kpi.value }}</p>\n            <ui-icon [name]=\"kpi.icon\" size=\"lg\" aria-hidden=\"true\"></ui-icon>\n          </div>\n        </ui-card>\n      </div>\n\n      <ui-card title=\"Última actividad\" subtitle=\"Los últimos eventos dentro de tus productos\">\n        <ul class=\"space-y-3 text-sm\">\n          <li *ngFor=\"let event of activity\" class=\"flex items-center justify-between\">\n            <span>{{ event.title }}</span>\n            <span class=\"text-xs text-slate-400\">{{ event.time }}</span>\n          </li>\n        </ul>\n      </ui-card>\n    </section>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RemoteEntryComponent {\n  protected readonly kpis: KpiCard[] = [\n    { label: 'Total de tareas', value: '124', icon: 'task', trend: '+12% vs. pasado' },\n    { label: 'Usuarios activos', value: '3.482', icon: 'group', trend: '+5% mensual' },\n    { label: 'MRR', value: '$86K', icon: 'trending_up', trend: '+8% intermensual' },\n    { label: 'Tickets abiertos', value: '18', icon: 'support_agent', trend: '-4 desde ayer' }\n  ];\n\n  protected readonly activity = [\n    { title: 'Nuevo usuario agregado al equipo de Ventas', time: 'Hace 12 minutos' },\n    { title: 'Campaña “Lanzamiento Q3” activada', time: 'Hace 1 hora' },\n    { title: 'Se completaron 5 tareas críticas', time: 'Hace 4 horas' }\n  ];\n}\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { RemoteEntryComponent } from './remote-entry.component';\n\ndescribe('RemoteEntryComponent (Dashboard)', () => {\n  let component: RemoteEntryComponent;\n  let fixture: ComponentFixture<RemoteEntryComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [RemoteEntryComponent]\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(RemoteEntryComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('shows the panel heading', () => {\n    const heading: HTMLHeadingElement | null = fixture.nativeElement.querySelector('h1');\n    expect(heading?.textContent).toContain('Panel general');\n  });\n});\n"],
  "mappings": "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",
  "names": ["IconComponent", "CardComponent", "ButtonComponent", "SkeletonComponent", "RemoteEntryComponent"]
}
